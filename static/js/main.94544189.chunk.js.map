{"version":3,"sources":["SetGameDifficulty.js","Header.js","GameOver.js","Card.js","GameBoard.js","WikiBoard.js","resetClicks.js","fetchWiki.js","createDeck.js","fetchCountryAPI.js","App.js","index.js"],"names":["SetGameDifficulty","gameNum","setGameNum","handleSubmit","className","onSubmit","value","onChange","e","target","name","map","data","i","key","disabled","Header","GameOver","clicks","correct","incorrect","Card","country","flagClick","activeCards","flipped","solved","flag","img","onClick","length","alt","src","Gameboard","cardDeck","setCardDeck","setClicks","setWikiBoardData","gameSolved","useState","setActiveCards","useEffect","c","prevState","index","setTimeout","state","boardIndex","gameDeck","WikiBoard","wikiBoardData","countryData","board","wiki","resetClicks","fetchWiki","setCountryData","fetch","then","response","json","extract","catch","err","console","error","shuffle","array","j","Math","floor","random","nameCorrections","Georgia","fetchCountryAPI","url","res","App","filter","preventDefault","countries","slice","createDeck","GameBoard","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94544189.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction SetGameDifficulty({ gameNum, setGameNum, handleSubmit }) {\n  const difficultyValues = [\n    {\n      name: \"Select Difficulty Level\",\n      value: \"{null}\"\n    },\n    {\n      name: \"Easy\",\n      value: 6\n    },\n    {\n      name: \"Normal\",\n      value: 12\n    },\n    {\n      name: \"Difficult\",\n      value: 18\n    }\n  ];\n\n  return (\n    <div className=\"selectDiv\">\n      <form onSubmit={handleSubmit}>\n        <select value={gameNum} onChange={e => setGameNum(e.target.value)}>\n          {difficultyValues.map((data, i) => (\n            <option key={i} value={data.value}>\n              {data.name}\n            </option>\n          ))}\n        </select>\n        <button className=\"btn\" disabled={!gameNum}>\n          Start!\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default SetGameDifficulty;\n","import React from \"react\";\nimport SetGameDifficulty from \"./SetGameDifficulty\";\n\nfunction Header({ handleSubmit, gameNum, setGameNum }) {\n  return (\n    <div className=\"header\">\n      <h1>Flag Memory</h1>\n      <SetGameDifficulty\n        handleSubmit={handleSubmit}\n        gameNum={gameNum}\n        setGameNum={setGameNum}\n      />\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction GameOver({ clicks }) {\n  return (\n    <div className=\"solved\">\n      <h1>Solved!</h1>\n      <h2>with {clicks.clicks} flips</h2>\n      <h3>\n        {clicks.correct * 2} correct clicks and {clicks.incorrect * 2} incorrect\n      </h3>\n      <p>select a new difficulty level to start again</p>\n    </div>\n  );\n}\n\nexport default GameOver;\n","import React from \"react\";\nimport \"./App.css\";\n\nfunction Card({ country, flagClick, activeCards }) {\n  let { flipped, solved, flag } = country;\n  let img = flipped ? flag : null;\n\n  return (\n    <div\n      className=\"card\"\n      onClick={\n        activeCards.length < 2 && !(flipped || solved)\n          ? () => flagClick(country)\n          : null\n      }\n    >\n      {solved ? <span className=\"check\">âœ”</span> : <img alt=\"\" src={img} />}\n    </div>\n  );\n}\n\nexport default Card;\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"./Card\";\n\nfunction Gameboard({\n  cardDeck,\n  setCardDeck,\n  setClicks,\n  setWikiBoardData,\n  gameSolved\n}) {\n  const [activeCards, setActiveCards] = useState([]);\n\n  useEffect(() => {\n    const pairMatch = c => {\n      setClicks(prevState => {\n        prevState.correct++;\n        return prevState;\n      });\n      setWikiBoardData(prevState => {\n        prevState = [c.index, ...prevState];\n        return prevState;\n      });\n      setTimeout(() => {\n        setCardDeck(prevState =>\n          prevState.map(state => {\n            if (state.name === c.name) {\n              state.flipped = false;\n              state.solved = true;\n            }\n            return state;\n          })\n        );\n        setActiveCards([]);\n      }, 400);\n    };\n    const pairNoMatch = () => {\n      setClicks(prevState => {\n        prevState.incorrect++;\n        return prevState;\n      });\n      setTimeout(() => {\n        setActiveCards([]);\n        setCardDeck(prevState =>\n          prevState.map(state => {\n            state.flipped = false;\n            return state;\n          })\n        );\n      }, 400);\n    };\n    if (activeCards.length === 2) {\n      activeCards[0].name === activeCards[1].name\n        ? pairMatch(activeCards[0])\n        : pairNoMatch();\n    }\n  }, [activeCards, setWikiBoardData, setClicks, setCardDeck]);\n\n  const flagClick = c => {\n    setClicks(prevState => {\n      prevState.clicks++;\n      return prevState;\n    });\n    setCardDeck(prevState => {\n      prevState[c.boardIndex].flipped = !prevState[c.boardIndex].flipped;\n      return prevState;\n    });\n    setActiveCards(prevState => {\n      prevState = [...prevState, c];\n      return prevState;\n    });\n  };\n\n  const gameDeck = cardDeck.map((country, i) => (\n    <Card\n      country={country}\n      key={i}\n      flagClick={flagClick}\n      activeCards={activeCards}\n    />\n  ));\n\n  return <div className={gameSolved ? \"hidden\" : \"cardGrid\"}>{gameDeck}</div>;\n}\n\nexport default Gameboard;\n","import React from \"react\";\n\nfunction WikiBoard({ wikiBoardData, countryData }) {\n  let board = wikiBoardData.map((country, i) => {\n    let { name, flag, wiki } = countryData[country];\n    return (\n      <div key={i} className=\"wiki\">\n        <h1>{name}</h1>\n        <img alt={`flag of ${name}`} src={flag} />\n        <p>{wiki}</p>\n      </div>\n    );\n  });\n\n  return <div className=\"wikiBoard\">{board}</div>;\n}\n\nexport default WikiBoard;\n","export default function resetClicks(setClicks) {\n  setClicks({\n    clicks: 0,\n    correct: 0,\n    incorrect: 0\n  });\n}\n","const url_wiki = \"https://en.wikipedia.org/api/rest_v1/page/summary/\";\n\nconst fetchWiki = (c, setCountryData) => {\n  fetch(url_wiki + c.name)\n    .then(response => response.json())\n    .then(json => {\n      setCountryData(prevState => {\n        prevState[c.index].wiki = json.extract;\n        return prevState;\n      });\n    })\n    .catch(err => console.error(err));\n};\n\nexport default fetchWiki;\n","import fetchWiki from \"./fetchWiki\";\n\nexport default function createDeck(\n  setCardDeck,\n  countryData,\n  setCountryData,\n  gameNum\n) {\n  let countries = [...countryData];\n  shuffle(countries);\n  countries = countries.slice(0, gameNum);\n  countries.map(c => fetchWiki(c, setCountryData));\n  countries = [...countries, ...countries];\n  shuffle(countries);\n  setCardDeck(countries);\n  setCardDeck(prevState => prevState.map((c, i) => ({ ...c, boardIndex: i })));\n}\n\n//Fisherâ€“Yates shuffle function\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n","const nameCorrections = {\n  \"Korea (Democratic People's Republic of)\": \"North Korea\",\n  \"Virgin Islands (British)\": \"British Virgin Islands\",\n  \"Macedonia (the former Yugoslav Republic of)\": \"North Macedonia\",\n  Georgia: \"Georgia (country)\"\n};\n\nconst fetchCountryAPI = (url, setCountryData) => {\n  fetch(url)\n    .then(res => res.json())\n    .then(data => {\n      setCountryData(\n        data.map((country, index) => {\n          let name = country.name;\n          if (nameCorrections[country.name]) {\n            name = nameCorrections[country.name];\n          }\n          return {\n            name: name,\n            flag: country.flag,\n            index,\n            flipped: false,\n            solved: false,\n            wiki: null\n          };\n        })\n      );\n    })\n    .catch(err => console.error(err));\n};\n\nexport default fetchCountryAPI;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport GameOver from \"./GameOver\";\nimport GameBoard from \"./GameBoard\";\nimport WikiBoard from \"./WikiBoard\";\nimport resetClicks from \"./resetClicks\";\nimport createDeck from \"./createDeck\";\nimport fetchCountryAPI from \"./fetchCountryAPI\";\nimport \"./App.css\";\n\nfunction App() {\n  const [gameNum, setGameNum] = useState(\"\");\n  const [clicks, setClicks] = useState({});\n  const [cardDeck, setCardDeck] = useState([]);\n  const [countryData, setCountryData] = useState([]);\n  const [wikiBoardData, setWikiBoardData] = useState([]);\n\n  const url = \"https://restcountries.eu/rest/v2/all\";\n\n  useEffect(() => {\n    resetClicks(setClicks);\n    fetchCountryAPI(url, setCountryData);\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    resetClicks(setClicks);\n    createDeck(setCardDeck, countryData, setCountryData, gameNum);\n    setGameNum(0);\n  };\n\n  let gameSolved =\n    cardDeck.length > 0 && cardDeck.filter(c => !c.solved).length === 0;\n\n  return (\n    <div className=\"app\">\n      <Header\n        clicks={clicks}\n        handleSubmit={handleSubmit}\n        gameNum={gameNum}\n        setGameNum={setGameNum}\n      />\n      {gameSolved && <GameOver clicks={clicks} />}\n      <GameBoard\n        cardDeck={cardDeck}\n        setCardDeck={setCardDeck}\n        setClicks={setClicks}\n        setWikiBoardData={setWikiBoardData}\n        countryData={countryData}\n        gameSolved={gameSolved}\n      />\n\n      <WikiBoard wikiBoardData={wikiBoardData} countryData={countryData} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}